// This flow is responsible for authenticating with super gluu
Flow org.gluu.agama.supergluu.authn
     Basepath ""
     Configs conf
     Inputs userData scimSetting
// Mark startup logs
Log "@debug Authentication flow is started"
// Set inum = userData.inum
inum = userData.inum
// Get instance SGValidator
sgValidator = Call org.gluu.agama.supergluu.SGValidator#new 
// Generates assertion request for validation
qrRequest = Call userData QRRequest "authenticate"
// Startup log for mobile notification
Log "@debug Sending mobile notification to user's registered Super Gluu devices "
// Get instance SGNotificationsUtil
realCrap = Call org.gluu.agama.supergluu.notify.SGNotificationsUtil#getInstance 
// Send mobile notification
aux | E = Call realCrap send inum sgValidator.appId qrRequest
// If there is an error sending the notification
When E is not null
     // Mark log when error
     Log "@error " E
     // Set E = null
     E = null
// realCrap, timeout and obj initialization
realCrap = null
timeout = conf.timeout
obj = { timeout: timeout }
// Load authn-notification.ftlh page and pass obj
data = RRF "pre-enrollment.ftlh" obj
// If click "continue", we will render view
When data.continue is ""
     // Set "obj" with request and timeout data
     obj = { request: qrRequest, timeout: timeout }
     // Load enrollment.ftlh page and pass "obj"
     data = RRF "enrollment.ftlh" obj
// Performs validation of the super gluu device
error = Call sgValidator validateDevice inum
// If the validation fails, then it is terminated
When error is not null
     // Finish the flow with error and return the error obtained
     Finish error
// Finish the flow successfully and return user inum
it_wdbjn = {success:true, data: { userId: inum }}
Finish it_wdbjn